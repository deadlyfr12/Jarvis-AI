import speech_recognition as sr
import datetime
import os
import webbrowser
import subprocess
import shlex
import random


def say(text):
    # Properly escape the text for shell command
    say_text = shlex.quote(str(text))
    # Use Samantha's voice with a slightly slower rate for better clarity
    os.system(f"say -v Samantha -r 175 {say_text}")
    return text


def close_tab(site_name):
    script = f'''
    tell application "Google Chrome"
        repeat with t in tabs of front window
            if URL of t contains "{site_name}" then
                close t
                exit repeat
            end if
        end repeat
    end tell
    '''
    os.system(f"osascript -e '{script}'")

def remember():
    notes_file = "notes.txt"
    if os.path.exists(notes_file):
        with open(notes_file, 'r') as f:
            notes = f.readlines()
        if notes:
            say("Here's what I remember sir:")
            for note in notes:
                if note.strip():  # Only process non-empty lines
                    say(note.strip())
        else:
            say("I don't have any notes stored yet, sir.")
    else:
        say("I don't have any notes stored yet, sir.")

def takeCommand():
    r= sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        # Adjust for ambient noise to improve recognition
        r.adjust_for_ambient_noise(source)
        audio = r.listen(source)
        try:
            print("Recognizing...")
            query = r.recognize_google(audio, language="en-us")
            print(f"User said: {query}")
            return query
        except Exception as e:
            return "Some Error Occured: Sorry from Jarvis"

def greet():
    hour = datetime.datetime.now().hour

    if 0 <= hour < 12:  # Corrected Morning condition
        return "Good Morning Sir.."
    elif 12 <= hour < 17:  # Fixed Afternoon range
        return "Good Afternoon Sir.."
    elif 17 <= hour < 23:  # Evening remains the same
        return "Good Evening Sir.."
    else:
        return "Hello Sir.."  # Covers cases outside 0-23 (unlikely)

greeting = greet()
print(greeting)
say(greeting)

#print(say("Hello I am Jarvis A.I."))


while True:
    query=takeCommand()
    
    # Convert query to lowercase for more reliable matching
    query_lower = query.lower()
    
    chitchat={
        "who are you": "I am Jarvis, your personal assistant.",
        "how are you": "I am rocking good sir, what about u?",
        "thank you": "my pleasure sir, How can I help you today?",
        "good job": "Thank you sir, my pleasure to serve you, is there anything else I can do for you today?",
        "fuck": "you fuck you",
        "shut up": "as you wish sir, your wish is my command",
        "who am I": "You are my master, how can I help you today my master",
        "are you there":"Yes my master, I am here",
        "what is my name":"You are my master, your name is Jagjot Singh."
    }
    for phrase, response in chitchat.items():
        if phrase in query:
            say(response)


    if "increase volume" in query or 'volume up' in query:
        os.system("osascript -e 'set volume 5'")
        say("Increasing volume sir..")

    if "decrease volume".lower() in query or 'volume down' in query:
        os.system("osascript -e 'set volume -5'")
        say("decreasing volume sir..")


    sites=[
        ["YouTube","https://www.youtube.com/"],["google","https://www.google.com/"],
        ["instagram","https://www.instagram.com/"],
        ["my favorite song","https://www.youtube.com/watch?v=DT9fEmSL_Lw&list=RDGMEM_6azG-gbwFIpRtH6PATXiQVMDT9fEmSL_Lw&start_radio=1"],
        ["Gmail","https://mail.google.com/mail/u/1/#inbox"],
        ["J5","https://chatgpt.com/"],
        ["outlook","https://outlook.office.com/mail/"]
        ]
    for site in sites:
        if f"Open {site[0]}".lower() in query_lower:
            say(f"Opening {site[0]} Sir...")
            webbrowser.open(site[1])
            break
        elif f"close {site[0]}".lower() in query_lower:
            close_tab(site[1])
            say(f"Closing {site[0]} sir...")


    open_apps=[["Whatsapp","open /Applications/WhatsApp.app"]]
    for openning_apps in open_apps:
        if f"Open {openning_apps[0]}".lower() in query_lower:
            say(f"Opening {openning_apps[0]} sir...")
            os.system(f"{openning_apps[1]}")
            break

    if "close WhatsApp" in query:
        os.system(f"pkill WhatsApp")
        say("Closing whatsapp sir..")
        #close_app("WhatsApp")

    if "note" in query or "remember" in query:
        if "what" in query and ("remember" in query or "remembered" in query or "notes" in query):
            remember()
        else:
            say("What would you like me to remember, sir?")
            note = takeCommand()
            with open('notes.txt','a') as f:
                f.write(f"{note}\n")
            say("Noted sir")

    if "exit" in query_lower or "stop" in query_lower:
        print(say("Goodbye Sir..."))
        break
